/*
 * This file is generated by jOOQ.
 */
package com.example.chatService.model.jooq.schema.tables.records;


import com.example.chatService.model.jooq.schema.enums.ChatStatus;
import com.example.chatService.model.jooq.schema.tables.ChatRoom;
import com.example.chatService.model.jooq.schema.tables.pojos.ChatRoomEntity;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatRoomRecord extends UpdatableRecordImpl<ChatRoomRecord> implements Record4<String, LocalDate, String, ChatStatus> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.chat_room.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.chat_room.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.chat_room.create_date</code>.
     */
    public void setCreateDate(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.chat_room.create_date</code>.
     */
    public LocalDate getCreateDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>public.chat_room.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.chat_room.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.chat_room.status</code>.
     */
    public void setStatus(ChatStatus value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.chat_room.status</code>.
     */
    public ChatStatus getStatus() {
        return (ChatStatus) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, LocalDate, String, ChatStatus> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, LocalDate, String, ChatStatus> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ChatRoom.CHAT_ROOM_ENTITY.ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return ChatRoom.CHAT_ROOM_ENTITY.CREATE_DATE;
    }

    @Override
    public Field<String> field3() {
        return ChatRoom.CHAT_ROOM_ENTITY.NAME;
    }

    @Override
    public Field<ChatStatus> field4() {
        return ChatRoom.CHAT_ROOM_ENTITY.STATUS;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public LocalDate component2() {
        return getCreateDate();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public ChatStatus component4() {
        return getStatus();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public LocalDate value2() {
        return getCreateDate();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public ChatStatus value4() {
        return getStatus();
    }

    @Override
    public ChatRoomRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public ChatRoomRecord value2(LocalDate value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public ChatRoomRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ChatRoomRecord value4(ChatStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public ChatRoomRecord values(String value1, LocalDate value2, String value3, ChatStatus value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChatRoomRecord
     */
    public ChatRoomRecord() {
        super(ChatRoom.CHAT_ROOM_ENTITY);
    }

    /**
     * Create a detached, initialised ChatRoomRecord
     */
    public ChatRoomRecord(String id, LocalDate createDate, String name, ChatStatus status) {
        super(ChatRoom.CHAT_ROOM_ENTITY);

        setId(id);
        setCreateDate(createDate);
        setName(name);
        setStatus(status);
    }

    /**
     * Create a detached, initialised ChatRoomRecord
     */
    public ChatRoomRecord(ChatRoomEntity value) {
        super(ChatRoom.CHAT_ROOM_ENTITY);

        if (value != null) {
            setId(value.getId());
            setCreateDate(value.getCreateDate());
            setName(value.getName());
            setStatus(value.getStatus());
        }
    }
}
