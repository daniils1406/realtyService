/*
 * This file is generated by jOOQ.
 */
package com.example.chatService.model.jooq.schema.tables.pojos;


import com.example.chatService.entity.Entity;
import com.example.chatService.model.jooq.schema.enums.Status;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageEntity extends Entity implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private UUID senderId;
    private String recipientId;
    private String senderName;
    private String content;
    private LocalDate createDate;
    private Status status;

    public MessageEntity() {}

    public MessageEntity(MessageEntity value) {
        this.id = value.id;
        this.senderId = value.senderId;
        this.recipientId = value.recipientId;
        this.senderName = value.senderName;
        this.content = value.content;
        this.createDate = value.createDate;
        this.status = value.status;
    }

    public MessageEntity(
        UUID id,
        UUID senderId,
        String recipientId,
        String senderName,
        String content,
        LocalDate createDate,
        Status status
    ) {
        this.id = id;
        this.senderId = senderId;
        this.recipientId = recipientId;
        this.senderName = senderName;
        this.content = content;
        this.createDate = createDate;
        this.status = status;
    }

    /**
     * Getter for <code>public.message.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.message.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.message.sender_id</code>.
     */
    public UUID getSenderId() {
        return this.senderId;
    }

    /**
     * Setter for <code>public.message.sender_id</code>.
     */
    public void setSenderId(UUID senderId) {
        this.senderId = senderId;
    }

    /**
     * Getter for <code>public.message.recipient_id</code>.
     */
    public String getRecipientId() {
        return this.recipientId;
    }

    /**
     * Setter for <code>public.message.recipient_id</code>.
     */
    public void setRecipientId(String recipientId) {
        this.recipientId = recipientId;
    }

    /**
     * Getter for <code>public.message.sender_name</code>.
     */
    public String getSenderName() {
        return this.senderName;
    }

    /**
     * Setter for <code>public.message.sender_name</code>.
     */
    public void setSenderName(String senderName) {
        this.senderName = senderName;
    }

    /**
     * Getter for <code>public.message.content</code>.
     */
    public String getContent() {
        return this.content;
    }

    /**
     * Setter for <code>public.message.content</code>.
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * Getter for <code>public.message.create_date</code>.
     */
    public LocalDate getCreateDate() {
        return this.createDate;
    }

    /**
     * Setter for <code>public.message.create_date</code>.
     */
    public void setCreateDate(LocalDate createDate) {
        this.createDate = createDate;
    }

    /**
     * Getter for <code>public.message.status</code>.
     */
    public Status getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>public.message.status</code>.
     */
    public void setStatus(Status status) {
        this.status = status;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final MessageEntity other = (MessageEntity) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.senderId == null) {
            if (other.senderId != null)
                return false;
        }
        else if (!this.senderId.equals(other.senderId))
            return false;
        if (this.recipientId == null) {
            if (other.recipientId != null)
                return false;
        }
        else if (!this.recipientId.equals(other.recipientId))
            return false;
        if (this.senderName == null) {
            if (other.senderName != null)
                return false;
        }
        else if (!this.senderName.equals(other.senderName))
            return false;
        if (this.content == null) {
            if (other.content != null)
                return false;
        }
        else if (!this.content.equals(other.content))
            return false;
        if (this.createDate == null) {
            if (other.createDate != null)
                return false;
        }
        else if (!this.createDate.equals(other.createDate))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.senderId == null) ? 0 : this.senderId.hashCode());
        result = prime * result + ((this.recipientId == null) ? 0 : this.recipientId.hashCode());
        result = prime * result + ((this.senderName == null) ? 0 : this.senderName.hashCode());
        result = prime * result + ((this.content == null) ? 0 : this.content.hashCode());
        result = prime * result + ((this.createDate == null) ? 0 : this.createDate.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("MessageEntity (");

        sb.append(id);
        sb.append(", ").append(senderId);
        sb.append(", ").append(recipientId);
        sb.append(", ").append(senderName);
        sb.append(", ").append(content);
        sb.append(", ").append(createDate);
        sb.append(", ").append(status);

        sb.append(")");
        return sb.toString();
    }
}
