/*
 * This file is generated by jOOQ.
 */
package com.example.chatService.model.jooq.schema.tables.pojos;


import com.example.chatService.entity.Entity;
import com.example.chatService.model.jooq.schema.enums.ChatStatus;

import java.io.Serializable;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatRoomEntity extends Entity implements Serializable {

    private static final long serialVersionUID = 1L;

    private String id;
    private LocalDate createDate;
    private String name;
    private ChatStatus status;

    public ChatRoomEntity() {}

    public ChatRoomEntity(ChatRoomEntity value) {
        this.id = value.id;
        this.createDate = value.createDate;
        this.name = value.name;
        this.status = value.status;
    }

    public ChatRoomEntity(
        String id,
        LocalDate createDate,
        String name,
        ChatStatus status
    ) {
        this.id = id;
        this.createDate = createDate;
        this.name = name;
        this.status = status;
    }

    /**
     * Getter for <code>public.chat_room.id</code>.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.chat_room.id</code>.
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.chat_room.create_date</code>.
     */
    public LocalDate getCreateDate() {
        return this.createDate;
    }

    /**
     * Setter for <code>public.chat_room.create_date</code>.
     */
    public void setCreateDate(LocalDate createDate) {
        this.createDate = createDate;
    }

    /**
     * Getter for <code>public.chat_room.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.chat_room.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.chat_room.status</code>.
     */
    public ChatStatus getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>public.chat_room.status</code>.
     */
    public void setStatus(ChatStatus status) {
        this.status = status;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ChatRoomEntity other = (ChatRoomEntity) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createDate == null) {
            if (other.createDate != null)
                return false;
        }
        else if (!this.createDate.equals(other.createDate))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createDate == null) ? 0 : this.createDate.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ChatRoomEntity (");

        sb.append(id);
        sb.append(", ").append(createDate);
        sb.append(", ").append(name);
        sb.append(", ").append(status);

        sb.append(")");
        return sb.toString();
    }
}
