/*
 * This file is generated by jOOQ.
 */
package com.example.chatService.model.jooq.schema.tables.pojos;


import com.example.chatService.entity.Entity;
import com.example.chatService.model.jooq.schema.enums.Cause;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationEntity extends Entity implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private Cause causeOfMessage;
    private String content;
    private LocalDate createDate;
    private String recipientId;

    public NotificationEntity() {}

    public NotificationEntity(NotificationEntity value) {
        this.id = value.id;
        this.causeOfMessage = value.causeOfMessage;
        this.content = value.content;
        this.createDate = value.createDate;
        this.recipientId = value.recipientId;
    }

    public NotificationEntity(
        UUID id,
        Cause causeOfMessage,
        String content,
        LocalDate createDate,
        String recipientId
    ) {
        this.id = id;
        this.causeOfMessage = causeOfMessage;
        this.content = content;
        this.createDate = createDate;
        this.recipientId = recipientId;
    }

    /**
     * Getter for <code>public.notification.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.notification.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.notification.cause_of_message</code>.
     */
    public Cause getCauseOfMessage() {
        return this.causeOfMessage;
    }

    /**
     * Setter for <code>public.notification.cause_of_message</code>.
     */
    public void setCauseOfMessage(Cause causeOfMessage) {
        this.causeOfMessage = causeOfMessage;
    }

    /**
     * Getter for <code>public.notification.content</code>.
     */
    public String getContent() {
        return this.content;
    }

    /**
     * Setter for <code>public.notification.content</code>.
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * Getter for <code>public.notification.create_date</code>.
     */
    public LocalDate getCreateDate() {
        return this.createDate;
    }

    /**
     * Setter for <code>public.notification.create_date</code>.
     */
    public void setCreateDate(LocalDate createDate) {
        this.createDate = createDate;
    }

    /**
     * Getter for <code>public.notification.recipient_id</code>.
     */
    public String getRecipientId() {
        return this.recipientId;
    }

    /**
     * Setter for <code>public.notification.recipient_id</code>.
     */
    public void setRecipientId(String recipientId) {
        this.recipientId = recipientId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final NotificationEntity other = (NotificationEntity) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.causeOfMessage == null) {
            if (other.causeOfMessage != null)
                return false;
        }
        else if (!this.causeOfMessage.equals(other.causeOfMessage))
            return false;
        if (this.content == null) {
            if (other.content != null)
                return false;
        }
        else if (!this.content.equals(other.content))
            return false;
        if (this.createDate == null) {
            if (other.createDate != null)
                return false;
        }
        else if (!this.createDate.equals(other.createDate))
            return false;
        if (this.recipientId == null) {
            if (other.recipientId != null)
                return false;
        }
        else if (!this.recipientId.equals(other.recipientId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.causeOfMessage == null) ? 0 : this.causeOfMessage.hashCode());
        result = prime * result + ((this.content == null) ? 0 : this.content.hashCode());
        result = prime * result + ((this.createDate == null) ? 0 : this.createDate.hashCode());
        result = prime * result + ((this.recipientId == null) ? 0 : this.recipientId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("NotificationEntity (");

        sb.append(id);
        sb.append(", ").append(causeOfMessage);
        sb.append(", ").append(content);
        sb.append(", ").append(createDate);
        sb.append(", ").append(recipientId);

        sb.append(")");
        return sb.toString();
    }
}
