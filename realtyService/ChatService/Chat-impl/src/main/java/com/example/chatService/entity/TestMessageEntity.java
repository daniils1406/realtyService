/*
 * This file is generated by jOOQ.
 */
package com.example.chatService.entity;



import java.io.Serializable;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestMessageEntity extends Entity implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID senderId;
    private UUID recipientId;
    private String senderName;
    private String content;

    public TestMessageEntity() {}

    public TestMessageEntity(TestMessageEntity value) {
        this.senderId = value.senderId;
        this.recipientId = value.recipientId;
        this.senderName = value.senderName;
        this.content = value.content;
    }

    public TestMessageEntity(
        UUID senderId,
        UUID recipientId,
        String senderName,
        String content
    ) {
        this.senderId = senderId;
        this.recipientId = recipientId;
        this.senderName = senderName;
        this.content = content;
    }




    /**
     * Getter for <code>public.message.sender_id</code>.
     */
    public UUID getSenderId() {
        return this.senderId;
    }

    /**
     * Setter for <code>public.message.sender_id</code>.
     */
    public void setSenderId(UUID senderId) {
        this.senderId = senderId;
    }

    /**
     * Getter for <code>public.message.recipient_id</code>.
     */
    public UUID getRecipientId() {
        return this.recipientId;
    }

    /**
     * Setter for <code>public.message.recipient_id</code>.
     */
    public void setRecipientId(UUID recipientId) {
        this.recipientId = recipientId;
    }

    /**
     * Getter for <code>public.message.sender_name</code>.
     */
    public String getSenderName() {
        return this.senderName;
    }

    /**
     * Setter for <code>public.message.sender_name</code>.
     */
    public void setSenderName(String senderName) {
        this.senderName = senderName;
    }

    /**
     * Getter for <code>public.message.content</code>.
     */
    public String getContent() {
        return this.content;
    }

    /**
     * Setter for <code>public.message.content</code>.
     */
    public void setContent(String content) {
        this.content = content;
    }



    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TestMessageEntity other = (TestMessageEntity) obj;
        if (this.senderId == null) {
            if (other.senderId != null)
                return false;
        }
        else if (!this.senderId.equals(other.senderId))
            return false;
        if (this.recipientId == null) {
            if (other.recipientId != null)
                return false;
        }
        else if (!this.recipientId.equals(other.recipientId))
            return false;
        if (this.senderName == null) {
            if (other.senderName != null)
                return false;
        }
        else if (!this.senderName.equals(other.senderName))
            return false;
        if (this.content == null) {
            if (other.content != null)
                return false;
        }
        else if (!this.content.equals(other.content))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.senderId == null) ? 0 : this.senderId.hashCode());
        result = prime * result + ((this.recipientId == null) ? 0 : this.recipientId.hashCode());
        result = prime * result + ((this.senderName == null) ? 0 : this.senderName.hashCode());
        result = prime * result + ((this.content == null) ? 0 : this.content.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("MessageEntity (");

        sb.append(", ").append(senderId);
        sb.append(", ").append(recipientId);
        sb.append(", ").append(senderName);
        sb.append(", ").append(content);

        sb.append(")");
        return sb.toString();
    }
}
