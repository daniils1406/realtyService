/*
 * This file is generated by jOOQ.
 */
package com.example.fileservice.model.jooq.schema.tables.records;


import com.example.fileservice.model.jooq.schema.enums.EntityType;
import com.example.fileservice.model.jooq.schema.enums.FileStatus;
import com.example.fileservice.model.jooq.schema.enums.FileType;
import com.example.fileservice.model.jooq.schema.tables.File;
import com.example.fileservice.model.jooq.schema.tables.pojos.FileEntity;

import java.time.LocalDate;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileRecord extends TableRecordImpl<FileRecord> implements Record11<UUID, String, String, Integer, String, LocalDate, LocalDate, String, FileType, FileStatus, EntityType> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.file.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.file.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.file.original_file_name</code>.
     */
    public void setOriginalFileName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.file.original_file_name</code>.
     */
    public String getOriginalFileName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.file.storage_file_name</code>.
     */
    public void setStorageFileName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.file.storage_file_name</code>.
     */
    public String getStorageFileName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.file.size</code>.
     */
    public void setSize(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.file.size</code>.
     */
    public Integer getSize() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.file.mime_type</code>.
     */
    public void setMimeType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.file.mime_type</code>.
     */
    public String getMimeType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.file.insert_date</code>.
     */
    public void setInsertDate(LocalDate value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.file.insert_date</code>.
     */
    public LocalDate getInsertDate() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for <code>public.file.update_date</code>.
     */
    public void setUpdateDate(LocalDate value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.file.update_date</code>.
     */
    public LocalDate getUpdateDate() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for <code>public.file.path</code>.
     */
    public void setPath(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.file.path</code>.
     */
    public String getPath() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.file.file_type</code>.
     */
    public void setFileType(FileType value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.file.file_type</code>.
     */
    public FileType getFileType() {
        return (FileType) get(8);
    }

    /**
     * Setter for <code>public.file.file_status</code>.
     */
    public void setFileStatus(FileStatus value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.file.file_status</code>.
     */
    public FileStatus getFileStatus() {
        return (FileStatus) get(9);
    }

    /**
     * Setter for <code>public.file.entity_type</code>.
     */
    public void setEntityType(EntityType value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.file.entity_type</code>.
     */
    public EntityType getEntityType() {
        return (EntityType) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<UUID, String, String, Integer, String, LocalDate, LocalDate, String, FileType, FileStatus, EntityType> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<UUID, String, String, Integer, String, LocalDate, LocalDate, String, FileType, FileStatus, EntityType> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return File.FILE_ENTITY.ID;
    }

    @Override
    public Field<String> field2() {
        return File.FILE_ENTITY.ORIGINAL_FILE_NAME;
    }

    @Override
    public Field<String> field3() {
        return File.FILE_ENTITY.STORAGE_FILE_NAME;
    }

    @Override
    public Field<Integer> field4() {
        return File.FILE_ENTITY.SIZE;
    }

    @Override
    public Field<String> field5() {
        return File.FILE_ENTITY.MIME_TYPE;
    }

    @Override
    public Field<LocalDate> field6() {
        return File.FILE_ENTITY.INSERT_DATE;
    }

    @Override
    public Field<LocalDate> field7() {
        return File.FILE_ENTITY.UPDATE_DATE;
    }

    @Override
    public Field<String> field8() {
        return File.FILE_ENTITY.PATH;
    }

    @Override
    public Field<FileType> field9() {
        return File.FILE_ENTITY.FILE_TYPE;
    }

    @Override
    public Field<FileStatus> field10() {
        return File.FILE_ENTITY.FILE_STATUS;
    }

    @Override
    public Field<EntityType> field11() {
        return File.FILE_ENTITY.ENTITY_TYPE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getOriginalFileName();
    }

    @Override
    public String component3() {
        return getStorageFileName();
    }

    @Override
    public Integer component4() {
        return getSize();
    }

    @Override
    public String component5() {
        return getMimeType();
    }

    @Override
    public LocalDate component6() {
        return getInsertDate();
    }

    @Override
    public LocalDate component7() {
        return getUpdateDate();
    }

    @Override
    public String component8() {
        return getPath();
    }

    @Override
    public FileType component9() {
        return getFileType();
    }

    @Override
    public FileStatus component10() {
        return getFileStatus();
    }

    @Override
    public EntityType component11() {
        return getEntityType();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getOriginalFileName();
    }

    @Override
    public String value3() {
        return getStorageFileName();
    }

    @Override
    public Integer value4() {
        return getSize();
    }

    @Override
    public String value5() {
        return getMimeType();
    }

    @Override
    public LocalDate value6() {
        return getInsertDate();
    }

    @Override
    public LocalDate value7() {
        return getUpdateDate();
    }

    @Override
    public String value8() {
        return getPath();
    }

    @Override
    public FileType value9() {
        return getFileType();
    }

    @Override
    public FileStatus value10() {
        return getFileStatus();
    }

    @Override
    public EntityType value11() {
        return getEntityType();
    }

    @Override
    public FileRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public FileRecord value2(String value) {
        setOriginalFileName(value);
        return this;
    }

    @Override
    public FileRecord value3(String value) {
        setStorageFileName(value);
        return this;
    }

    @Override
    public FileRecord value4(Integer value) {
        setSize(value);
        return this;
    }

    @Override
    public FileRecord value5(String value) {
        setMimeType(value);
        return this;
    }

    @Override
    public FileRecord value6(LocalDate value) {
        setInsertDate(value);
        return this;
    }

    @Override
    public FileRecord value7(LocalDate value) {
        setUpdateDate(value);
        return this;
    }

    @Override
    public FileRecord value8(String value) {
        setPath(value);
        return this;
    }

    @Override
    public FileRecord value9(FileType value) {
        setFileType(value);
        return this;
    }

    @Override
    public FileRecord value10(FileStatus value) {
        setFileStatus(value);
        return this;
    }

    @Override
    public FileRecord value11(EntityType value) {
        setEntityType(value);
        return this;
    }

    @Override
    public FileRecord values(UUID value1, String value2, String value3, Integer value4, String value5, LocalDate value6, LocalDate value7, String value8, FileType value9, FileStatus value10, EntityType value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FileRecord
     */
    public FileRecord() {
        super(File.FILE_ENTITY);
    }

    /**
     * Create a detached, initialised FileRecord
     */
    public FileRecord(UUID id, String originalFileName, String storageFileName, Integer size, String mimeType, LocalDate insertDate, LocalDate updateDate, String path, FileType fileType, FileStatus fileStatus, EntityType entityType) {
        super(File.FILE_ENTITY);

        setId(id);
        setOriginalFileName(originalFileName);
        setStorageFileName(storageFileName);
        setSize(size);
        setMimeType(mimeType);
        setInsertDate(insertDate);
        setUpdateDate(updateDate);
        setPath(path);
        setFileType(fileType);
        setFileStatus(fileStatus);
        setEntityType(entityType);
    }

    /**
     * Create a detached, initialised FileRecord
     */
    public FileRecord(FileEntity value) {
        super(File.FILE_ENTITY);

        if (value != null) {
            setId(value.getId());
            setOriginalFileName(value.getOriginalFileName());
            setStorageFileName(value.getStorageFileName());
            setSize(value.getSize());
            setMimeType(value.getMimeType());
            setInsertDate(value.getInsertDate());
            setUpdateDate(value.getUpdateDate());
            setPath(value.getPath());
            setFileType(value.getFileType());
            setFileStatus(value.getFileStatus());
            setEntityType(value.getEntityType());
        }
    }
}
