/*
 * This file is generated by jOOQ.
 */
package com.example.authenticationService.model.jooq.schema.tables.records;


import com.example.authenticationService.model.jooq.schema.enums.Agentlevel;
import com.example.authenticationService.model.jooq.schema.tables.Agent;
import com.example.authenticationService.model.jooq.schema.tables.pojos.AgentEntity;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AgentRecord extends TableRecordImpl<AgentRecord> implements Record3<Agentlevel, UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.agent.experience</code>.
     */
    public void setExperience(Agentlevel value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.agent.experience</code>.
     */
    public Agentlevel getExperience() {
        return (Agentlevel) get(0);
    }

    /**
     * Setter for <code>public.agent.id</code>.
     */
    public void setId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.agent.id</code>.
     */
    public UUID getId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.agent.agency_id</code>.
     */
    public void setAgencyId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.agent.agency_id</code>.
     */
    public UUID getAgencyId() {
        return (UUID) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Agentlevel, UUID, UUID> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Agentlevel, UUID, UUID> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Agentlevel> field1() {
        return Agent.AGENT_ENTITY.EXPERIENCE;
    }

    @Override
    public Field<UUID> field2() {
        return Agent.AGENT_ENTITY.ID;
    }

    @Override
    public Field<UUID> field3() {
        return Agent.AGENT_ENTITY.AGENCY_ID;
    }

    @Override
    public Agentlevel component1() {
        return getExperience();
    }

    @Override
    public UUID component2() {
        return getId();
    }

    @Override
    public UUID component3() {
        return getAgencyId();
    }

    @Override
    public Agentlevel value1() {
        return getExperience();
    }

    @Override
    public UUID value2() {
        return getId();
    }

    @Override
    public UUID value3() {
        return getAgencyId();
    }

    @Override
    public AgentRecord value1(Agentlevel value) {
        setExperience(value);
        return this;
    }

    @Override
    public AgentRecord value2(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public AgentRecord value3(UUID value) {
        setAgencyId(value);
        return this;
    }

    @Override
    public AgentRecord values(Agentlevel value1, UUID value2, UUID value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AgentRecord
     */
    public AgentRecord() {
        super(Agent.AGENT_ENTITY);
    }

    /**
     * Create a detached, initialised AgentRecord
     */
    public AgentRecord(Agentlevel experience, UUID id, UUID agencyId) {
        super(Agent.AGENT_ENTITY);

        setExperience(experience);
        setId(id);
        setAgencyId(agencyId);
    }

    /**
     * Create a detached, initialised AgentRecord
     */
    public AgentRecord(AgentEntity value) {
        super(Agent.AGENT_ENTITY);

        if (value != null) {
            setExperience(value.getExperience());
            setId(value.getId());
            setAgencyId(value.getAgencyId());
        }
    }
}
