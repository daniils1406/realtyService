/*
 * This file is generated by jOOQ.
 */
package com.example.authenticationService.model.jooq.schema;


import com.example.authenticationService.model.jooq.schema.tables.Agent;
import com.example.authenticationService.model.jooq.schema.tables.CianUser;
import com.example.authenticationService.model.jooq.schema.tables.Organisation;
import com.example.authenticationService.model.jooq.schema.tables.RefreshToken;
import com.example.authenticationService.model.jooq.schema.tables.VerificationToken;
import com.example.authenticationService.model.jooq.schema.tables.records.AgentRecord;
import com.example.authenticationService.model.jooq.schema.tables.records.CianUserRecord;
import com.example.authenticationService.model.jooq.schema.tables.records.OrganisationRecord;
import com.example.authenticationService.model.jooq.schema.tables.records.RefreshTokenRecord;
import com.example.authenticationService.model.jooq.schema.tables.records.VerificationTokenRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CianUserRecord> PK_USER = Internal.createUniqueKey(CianUser.CIAN_USER_ENTITY, DSL.name("pk_user"), new TableField[] { CianUser.CIAN_USER_ENTITY.ID }, true);
    public static final UniqueKey<RefreshTokenRecord> REFRESH_TOKEN_TOKEN_KEY = Internal.createUniqueKey(RefreshToken.REFRESH_TOKEN_ENTITY, DSL.name("refresh_token_token_key"), new TableField[] { RefreshToken.REFRESH_TOKEN_ENTITY.TOKEN }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AgentRecord, CianUserRecord> AGENT__FK_TOCIANUSER = Internal.createForeignKey(Agent.AGENT_ENTITY, DSL.name("fk_toCianUser"), new TableField[] { Agent.AGENT_ENTITY.ID }, Keys.PK_USER, new TableField[] { CianUser.CIAN_USER_ENTITY.ID }, true);
    public static final ForeignKey<OrganisationRecord, CianUserRecord> ORGANISATION__FK_TOCIANUSER = Internal.createForeignKey(Organisation.ORGANISATION_ENTITY, DSL.name("fk_toCianUser"), new TableField[] { Organisation.ORGANISATION_ENTITY.ID }, Keys.PK_USER, new TableField[] { CianUser.CIAN_USER_ENTITY.ID }, true);
    public static final ForeignKey<VerificationTokenRecord, CianUserRecord> VERIFICATION_TOKEN__FR_TO_USER = Internal.createForeignKey(VerificationToken.VERIFICATION_TOKEN_ENTITY, DSL.name("fr_to_user"), new TableField[] { VerificationToken.VERIFICATION_TOKEN_ENTITY.USERID }, Keys.PK_USER, new TableField[] { CianUser.CIAN_USER_ENTITY.ID }, true);
}
