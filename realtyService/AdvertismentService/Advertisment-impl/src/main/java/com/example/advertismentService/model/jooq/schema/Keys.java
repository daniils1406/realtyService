/*
 * This file is generated by jOOQ.
 */
package com.example.advertismentService.model.jooq.schema;


import com.example.advertismentService.model.jooq.schema.tables.Agency;
import com.example.advertismentService.model.jooq.schema.tables.Builder;
import com.example.advertismentService.model.jooq.schema.tables.Deal;
import com.example.advertismentService.model.jooq.schema.tables.Flat;
import com.example.advertismentService.model.jooq.schema.tables.House;
import com.example.advertismentService.model.jooq.schema.tables.Realty;
import com.example.advertismentService.model.jooq.schema.tables.Regions;
import com.example.advertismentService.model.jooq.schema.tables.RegionsAndAgency;
import com.example.advertismentService.model.jooq.schema.tables.ResidentialComplex;
import com.example.advertismentService.model.jooq.schema.tables.records.AgencyRecord;
import com.example.advertismentService.model.jooq.schema.tables.records.BuilderRecord;
import com.example.advertismentService.model.jooq.schema.tables.records.DealRecord;
import com.example.advertismentService.model.jooq.schema.tables.records.FlatRecord;
import com.example.advertismentService.model.jooq.schema.tables.records.HouseRecord;
import com.example.advertismentService.model.jooq.schema.tables.records.RealtyRecord;
import com.example.advertismentService.model.jooq.schema.tables.records.RegionsAndAgencyRecord;
import com.example.advertismentService.model.jooq.schema.tables.records.RegionsRecord;
import com.example.advertismentService.model.jooq.schema.tables.records.ResidentialComplexRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AgencyRecord> PK_AGENCY = Internal.createUniqueKey(Agency.AGENCY_ENTITY, DSL.name("pk_agency"), new TableField[] { Agency.AGENCY_ENTITY.ID }, true);
    public static final UniqueKey<BuilderRecord> PK_BUILDER = Internal.createUniqueKey(Builder.BUILDER_ENTITY, DSL.name("pk_builder"), new TableField[] { Builder.BUILDER_ENTITY.ID }, true);
    public static final UniqueKey<DealRecord> PK_DEAL = Internal.createUniqueKey(Deal.DEAL_ENTITY, DSL.name("pk_deal"), new TableField[] { Deal.DEAL_ENTITY.ID }, true);
    public static final UniqueKey<FlatRecord> FLAT_ID_KEY = Internal.createUniqueKey(Flat.FLAT_ENTITY, DSL.name("flat_id_key"), new TableField[] { Flat.FLAT_ENTITY.ID }, true);
    public static final UniqueKey<HouseRecord> HOUSE_ID_KEY = Internal.createUniqueKey(House.HOUSE_ENTITY, DSL.name("house_id_key"), new TableField[] { House.HOUSE_ENTITY.ID }, true);
    public static final UniqueKey<RealtyRecord> PK_REALTY = Internal.createUniqueKey(Realty.REALTY_ENTITY, DSL.name("pk_realty"), new TableField[] { Realty.REALTY_ENTITY.ID }, true);
    public static final UniqueKey<RegionsRecord> REGIONS_CODE_KEY = Internal.createUniqueKey(Regions.REGIONS_ENTITY, DSL.name("regions_code_key"), new TableField[] { Regions.REGIONS_ENTITY.CODE }, true);
    public static final UniqueKey<ResidentialComplexRecord> PK_RESIDENTIAL_COMPLEX = Internal.createUniqueKey(ResidentialComplex.RESIDENTIAL_COMPLEX_ENTITY, DSL.name("pk_residential_complex"), new TableField[] { ResidentialComplex.RESIDENTIAL_COMPLEX_ENTITY.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DealRecord, RealtyRecord> DEAL__FK_TOREALTY = Internal.createForeignKey(Deal.DEAL_ENTITY, DSL.name("fk_toRealty"), new TableField[] { Deal.DEAL_ENTITY.REALTY_ID }, Keys.PK_REALTY, new TableField[] { Realty.REALTY_ENTITY.ID }, true);
    public static final ForeignKey<FlatRecord, RealtyRecord> FLAT__FK_TOREALTY = Internal.createForeignKey(Flat.FLAT_ENTITY, DSL.name("fk_toRealty"), new TableField[] { Flat.FLAT_ENTITY.ID }, Keys.PK_REALTY, new TableField[] { Realty.REALTY_ENTITY.ID }, true);
    public static final ForeignKey<HouseRecord, RealtyRecord> HOUSE__FK_TOREALTY = Internal.createForeignKey(House.HOUSE_ENTITY, DSL.name("fk_toRealty"), new TableField[] { House.HOUSE_ENTITY.ID }, Keys.PK_REALTY, new TableField[] { Realty.REALTY_ENTITY.ID }, true);
    public static final ForeignKey<RealtyRecord, ResidentialComplexRecord> REALTY__FK_TO_RESIDENTIAL_COMPLEX = Internal.createForeignKey(Realty.REALTY_ENTITY, DSL.name("fk_to_residential_complex"), new TableField[] { Realty.REALTY_ENTITY.COMPLEX_ID }, Keys.PK_RESIDENTIAL_COMPLEX, new TableField[] { ResidentialComplex.RESIDENTIAL_COMPLEX_ENTITY.ID }, true);
    public static final ForeignKey<RegionsAndAgencyRecord, AgencyRecord> REGIONS_AND_AGENCY__FK_TO_AGENCY = Internal.createForeignKey(RegionsAndAgency.REGIONS_AND_AGENCY_ENTITY, DSL.name("fk_to_agency"), new TableField[] { RegionsAndAgency.REGIONS_AND_AGENCY_ENTITY.AGENCY_ID }, Keys.PK_AGENCY, new TableField[] { Agency.AGENCY_ENTITY.ID }, true);
    public static final ForeignKey<ResidentialComplexRecord, BuilderRecord> RESIDENTIAL_COMPLEX__FK_TOBUILDER = Internal.createForeignKey(ResidentialComplex.RESIDENTIAL_COMPLEX_ENTITY, DSL.name("fk_toBuilder"), new TableField[] { ResidentialComplex.RESIDENTIAL_COMPLEX_ENTITY.BUILDER_ID }, Keys.PK_BUILDER, new TableField[] { Builder.BUILDER_ENTITY.ID }, true);
}
