/*
 * This file is generated by jOOQ.
 */
package com.example.advertismentService.model.jooq.schema.tables.pojos;


import com.example.advertismentService.model.jooq.schema.enums.Material;

import java.io.Serializable;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HouseEntity extends RealtyEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private Double areaSquare;
    private Material material;
    private Integer levels;

    public HouseEntity() {}

    public HouseEntity(HouseEntity value) {
        this.id = value.id;
        this.areaSquare = value.areaSquare;
        this.material = value.material;
        this.levels = value.levels;
    }

    public HouseEntity(
        UUID id,
        Double areaSquare,
        Material material,
        Integer levels
    ) {
        this.id = id;
        this.areaSquare = areaSquare;
        this.material = material;
        this.levels = levels;
    }

    /**
     * Getter for <code>public.house.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.house.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.house.area_square</code>.
     */
    public Double getAreaSquare() {
        return this.areaSquare;
    }

    /**
     * Setter for <code>public.house.area_square</code>.
     */
    public void setAreaSquare(Double areaSquare) {
        this.areaSquare = areaSquare;
    }

    /**
     * Getter for <code>public.house.material</code>.
     */
    public Material getMaterial() {
        return this.material;
    }

    /**
     * Setter for <code>public.house.material</code>.
     */
    public void setMaterial(Material material) {
        this.material = material;
    }

    /**
     * Getter for <code>public.house.levels</code>.
     */
    public Integer getLevels() {
        return this.levels;
    }

    /**
     * Setter for <code>public.house.levels</code>.
     */
    public void setLevels(Integer levels) {
        this.levels = levels;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final HouseEntity other = (HouseEntity) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.areaSquare == null) {
            if (other.areaSquare != null)
                return false;
        }
        else if (!this.areaSquare.equals(other.areaSquare))
            return false;
        if (this.material == null) {
            if (other.material != null)
                return false;
        }
        else if (!this.material.equals(other.material))
            return false;
        if (this.levels == null) {
            if (other.levels != null)
                return false;
        }
        else if (!this.levels.equals(other.levels))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.areaSquare == null) ? 0 : this.areaSquare.hashCode());
        result = prime * result + ((this.material == null) ? 0 : this.material.hashCode());
        result = prime * result + ((this.levels == null) ? 0 : this.levels.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("HouseEntity (");

        sb.append(id);
        sb.append(", ").append(areaSquare);
        sb.append(", ").append(material);
        sb.append(", ").append(levels);

        sb.append(")");
        return sb.toString();
    }
}
